@model SaveOrderViewModel
<div class="row fw-bold" style="text-align: center">
    <div class="col-md-4">Название</div>
    <div class="col-md-4">Позиция</div>
    <div class="col-md-3">Количество</div>
</div>
@for (var i = 0; i < Model.OrderItems.Count; i++)
{
    <div class="order-item-row row mb-2">
        <div class="col-md-4">
            @Html.EditorFor(model => model.OrderItems[i].Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите название элемента заказа" } })
            @Html.ValidationMessageFor(model => model.OrderItems[i].Name, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.EditorFor(model => model.OrderItems[i].Unit, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите позицию элемента заказа" } })
            @Html.ValidationMessageFor(model => model.OrderItems[i].Unit, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.OrderItems[i].Quantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите количество элемента заказа" } })
            @Html.ValidationMessageFor(model => model.OrderItems[i].Quantity, "", new { @class = "text-danger" })
        </div>
        <div class="col mt-1">
            <button type="button" class="btn btn-danger btn-sm" onclick="removeOrderItem(this)">
                <i class="fa fa-trash"></i>
            </button>
        </div>
    </div>
}